From f9e7e69d9f610dfff4506b7a340240f958d97d6f Mon Sep 17 00:00:00 2001
From: Thorsten Kummermehr <thorsten.kummermehr@k2l.de>
Date: Mon, 20 Nov 2017 12:56:40 +0100
Subject: [PATCH 2/2] Use libxml2 instead of mxml

Signed-off-by: Thorsten Kummermehr <thorsten.kummermehr@k2l.de>
---
 README.md              |  5 +++--
 ucs2-afb/ucs_binding.c | 20 ++++++++++++--------
 2 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/README.md b/README.md
index 0f0cffa..cf9a380 100644
--- a/README.md
+++ b/README.md
@@ -21,12 +21,13 @@ AFB_daemon dependency on Standard Linux Distributions
     alsa-devel
     ElectricFence (BUG should not be mandatory)
     libopenssl-devel libgcrypt-devel libgnutls-devel (optional but requested by libmicrohttpd for https)
+    libxml2-devel
 
     OpenSuse >=42.2
-      zypper in gcc5 gdb gcc5-c++ git cmake make ElectricFence systemd-devel libopenssl-devel  libuuid-devel alsa-devel libgcrypt-devel libgnutls-devel libjson-c-devel file-devel mxml-devel
+      zypper in gcc5 gdb gcc5-c++ git cmake make ElectricFence systemd-devel libopenssl-devel  libuuid-devel alsa-devel libgcrypt-devel libgnutls-devel libjson-c-devel file-devel libxml2-devel
 
     Ubuntu >= 16.4 libuuid-devel
-      apt-get install cmake git electric-fence libsystemd-dev libssl-dev uuid-dev libasound2-dev libgcrypt20-dev libgnutls-dev libgnutls-dev libjson-c-dev libmagic-dev  libmxml-dev
+      apt-get install cmake git electric-fence libsystemd-dev libssl-dev uuid-dev libasound2-dev libgcrypt20-dev libgnutls-dev libgnutls-dev libjson-c-dev libmagic-dev libxml2-dev
 
     libmicrohttpd>=0.9.55 (as today OpenSuse-42.2 or Ubuntu-.16.4 ship older versions)
     afb-daemon from AGL Gerrit git clone https://gerrit.automotivelinux.org/gerrit/src/app-framework-binder
diff --git a/ucs2-afb/ucs_binding.c b/ucs2-afb/ucs_binding.c
index e1451a0..a9684b8 100644
--- a/ucs2-afb/ucs_binding.c
+++ b/ucs2-afb/ucs_binding.c
@@ -59,6 +59,7 @@ typedef struct {
   CdevData_t rx;
   CdevData_t tx;
   UCSI_Data_t ucsiData;
+  UcsXmlVal_t* ucsConfig;
 } ucsContextT;
 
 typedef struct {
@@ -66,7 +67,7 @@ typedef struct {
     
 } EventData_t;
 
-static ucsContextT *ucsContextS;
+static ucsContextT *ucsContextS = NULL;
 static EventData_t *eventData = NULL;
 
 PUBLIC void UcsXml_CB_OnError(const char format[], uint16_t vargsCnt, ...) {
@@ -190,7 +191,10 @@ PUBLIC void UCSI_CB_OnTxRequest(void *pTag, const uint8_t *pData, uint32_t len)
  */
 void UCSI_CB_OnStop(void *pTag) {
     AFB_NOTICE ("UNICENS stopped");
-
+    if (NULL != ucsContextS && NULL != ucsContextS->ucsConfig) {
+        UcsXml_FreeVal(ucsContextS->ucsConfig);
+        ucsContextS->ucsConfig = NULL;
+    }
 }
 
 /** This callback will be raised, when ever an applicative message on the control channel arrived */
@@ -291,7 +295,7 @@ STATIC UcsXmlVal_t* ParseFile(struct afb_req request) {
     ssize_t readSize;
     int fdHandle ;
     struct stat fdStat;
-    UcsXmlVal_t* ucsConfig;
+    UcsXmlVal_t *ucsConfig = NULL;
 
     const char *filename = afb_req_value(request, "filename");
     if (!filename) {
@@ -322,6 +326,7 @@ STATIC UcsXmlVal_t* ParseFile(struct afb_req request) {
         afb_req_fail_f (request, "filexml-error", "File XML invalid: '%s'", filename);
         goto OnErrorExit;
     }
+    AFB_NOTICE ("Parsing result: %d Nodes, %d Scripts, Ethernet Bandwith %d bytes = %.2f MBit/s", ucsConfig->nodSize, ucsConfig->routesSize, ucsConfig->packetBw, (48 * 8 * ucsConfig->packetBw / 1000.0));
 
     return (ucsConfig);
 
@@ -330,15 +335,14 @@ STATIC UcsXmlVal_t* ParseFile(struct afb_req request) {
 }
 
 PUBLIC void ucs2_initialise (struct afb_req request) {
-    static UcsXmlVal_t *ucsConfig;
-    static ucsContextT ucsContext;
+    static ucsContextT ucsContext = { 0 };
 
     sd_event_source *evtSource;
     int err;
 
     /* Read and parse XML file */
-    ucsConfig = ParseFile (request);
-    if (NULL == ucsConfig) goto OnErrorExit;
+    ucsContext.ucsConfig = ParseFile (request);
+    if (NULL == ucsContext.ucsConfig) goto OnErrorExit;
 
     /* When ucsContextS is set, do not initalize UNICENS, CDEVs or system hooks, just load new XML */
     if (!ucsContextS)
@@ -362,7 +366,7 @@ PUBLIC void ucs2_initialise (struct afb_req request) {
         ucsContextS = &ucsContext;
     }
     /* Initialise UNICENS with parsed config */
-    if (!UCSI_NewConfig(&ucsContext.ucsiData, ucsConfig))   {
+    if (!UCSI_NewConfig(&ucsContext.ucsiData, ucsContext.ucsConfig))   {
         afb_req_fail_f (request, "UNICENS-init", "Fail to initialize UNICENS");
         goto OnErrorExit;
     }
-- 
2.11.0.windows.3

